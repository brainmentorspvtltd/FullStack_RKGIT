const evenOdd= num=>num%2==0?"Even "+num:"Odd "+num;
const cube = num=>num**3;
function loop(n, fn){
    for(var i = 1 ; i<=n ; i++){
        console.log(fn(i));
    }
}
// fn is a callback fn
// loop is a HOF
undefined
loop(5, cube);
VM422:5 1
VM422:5 8
VM422:5 27
VM422:5 64
VM422:5 125
undefined
loop(5, evenOdd);
VM422:5 Odd 1
VM422:5 Even 2
VM422:5 Odd 3
VM422:5 Even 4
VM422:5 Odd 5
undefined
var arr = [10,20,10,20,30,10,40,50];
undefined
arr.forEach
ƒ forEach() { [native code] }
arr.forEach(n=>console.log(n));
VM697:1 10
VM697:1 20
VM697:1 10
VM697:1 20
VM697:1 30
VM697:1 10
VM697:1 40
VM697:1 50
undefined
arr.find(ele=>ele==30);
30
arr.find(ele=>ele==10);
10
arr.find(ele=>ele==10000)?"Found":"Not Found";
'Not Found'
arr.find(ele=>ele==30)?"Found":"Not Found";
'Found'
arr.findIndex(ele=>ele==30);
4
arr.findIndex(ele=>ele==10);
0
arr;
(8) [10, 20, 10, 20, 30, 10, 40, 50]
arr.findIndex(ele=>ele==10000);
-1
arr.filter(e=>e==10);
(3) [10, 10, 10]
arr.forEach(n=>console.log(n));
VM981:1 10
VM981:1 20
VM981:1 10
VM981:1 20
VM981:1 30
VM981:1 10
VM981:1 40
VM981:1 50
undefined
arr.forEach((n,i)=>console.log(n,i));
VM1008:1 10 0
VM1008:1 20 1
VM1008:1 10 2
VM1008:1 20 3
VM1008:1 30 4
VM1008:1 10 5
VM1008:1 40 6
VM1008:1 50 7
undefined
arr.forEach((n,i,a)=>console.log(n,i,a));
VM1029:1 10 0 (8) [10, 20, 10, 20, 30, 10, 40, 50]
VM1029:1 20 1 (8) [10, 20, 10, 20, 30, 10, 40, 50]
VM1029:1 10 2 (8) [10, 20, 10, 20, 30, 10, 40, 50]
VM1029:1 20 3 (8) [10, 20, 10, 20, 30, 10, 40, 50]
VM1029:1 30 4 (8) [10, 20, 10, 20, 30, 10, 40, 50]
VM1029:1 10 5 (8) [10, 20, 10, 20, 30, 10, 40, 50]
VM1029:1 40 6 (8) [10, 20, 10, 20, 30, 10, 40, 50]
VM1029:1 50 7 (8) [10, 20, 10, 20, 30, 10, 40, 50]
undefined
var obj = {id:101, name:'Abcd'};
undefined
var x = [10,20,30];
undefined
console.log("X is "+x.toString());
VM1268:1 X is 10,20,30
undefined
console.log("X is "+x);
VM1309:1 X is 10,20,30
undefined
console.log("X is ",x);
VM1324:1 X is  (3) [10, 20, 30]
undefined
console.log("X is "+obj);
VM1349:1 X is [object Object]
undefined
console.log("X is ",obj);
VM1362:1 X is  {id: 101, name: 'Abcd'}
undefined
arr.filter(e=>e==10).length;
3
arr;
(8) [10, 20, 10, 20, 30, 10, 40, 50]
var h = arr.filter(e=>true);
undefined
h;
(8) [10, 20, 10, 20, 30, 10, 40, 50]
arr == h;
false
arr =arr.filter(e=>e!=10)
(5) [20, 20, 30, 40, 50]
arr =arr.filter(e=>(e!=10 || e!=20));
(5) [20, 20, 30, 40, 50]
arr =arr.filter(e=>(e!=10 && e!=20));
(3) [30, 40, 50]
var prices = [100.20, 900.200,33333.2,4444444];
undefined
var t = 100000;
undefined
t.toLocaleString('hi');
'1,00,000'
t.toLocaleString('us');
'100,000'
t.toLocaleString('fr');
'100 000'
var t = 100000.3333;
undefined
t.toLocaleString('fr');
'100 000,333'
t.toLocaleString('hi');
'1,00,000.333'
t.toLocaleString('us');
'100,000.333'
t;
100000.3333
prices.map(p=>p.toLocaleString('hi'));
(4) ['100.2', '900.2', '33,333.2', '44,44,444']
prices;
(4) [100.2, 900.2, 33333.2, 4444444]
var g =prices.map(p=>p);
undefined
prices == g;
false
prices;
(4) [100.2, 900.2, 33333.2, 4444444]
    arr= [10,20,10,20,30,40,50,10];
(8) [10, 20, 10, 20, 30, 40, 50, 10]
arr.sort((first, second)=>first-second);
(8) [10, 10, 10, 20, 20, 30, 40, 50]
arr.sort((first, second)=>second-first);
(8) [50, 40, 30, 20, 20, 10, 10, 10]
var names = ["ram","shyam","amit","sohan"];
undefined
"ram".localeCompare("shyam");
-1
"shyam".localeCompare("ram");
1
"ram".localeCompare("ram");
0
names.sort((a,b)=>a.localeCompare(b));
(4) ['amit', 'ram', 'shyam', 'sohan']
var emps = [{id:1010,name:'shyam', salary:510000},
           {id:1001,name:'amit', salary:20000},
            {id:1002,name:'ram', salary:30000},
            {id:1003,name:'tim', salary:40000}
           ];
undefined
emps.sort((a,b)=>a.id-b.id);
(4) [{…}, {…}, {…}, {…}]0: {id: 1001, name: 'amit', salary: 20000}1: {id: 1002, name: 'ram', salary: 30000}2: {id: 1003, name: 'tim', salary: 40000}3: {id: 1010, name: 'shyam', salary: 510000}length: 4[[Prototype]]: Array(0)
emps.sort((a,b)=>a.name.localeCompare(b.name));
(4) [{…}, {…}, {…}, {…}]0: {id: 1001, name: 'amit', salary: 20000}1: {id: 1002, name: 'ram', salary: 30000}2: {id: 1010, name: 'shyam', salary: 510000}3: {id: 1003, name: 'tim', salary: 40000}length: 4[[Prototype]]: Array(0)
emps.sort((a,b)=>a.salary- b.salary);
(4) [{…}, {…}, {…}, {…}]0: {id: 1001, name: 'amit', salary: 20000}1: {id: 1002, name: 'ram', salary: 30000}2: {id: 1003, name: 'tim', salary: 40000}3: {id: 1010, name: 'shyam', salary: 510000}length: 4[[Prototype]]: Array(0)
emps.sort((a,b)=>b.salary- a.salary);
(4) [{…}, {…}, {…}, {…}]0: {id: 1010, name: 'shyam', salary: 510000}1: {id: 1003, name: 'tim', salary: 40000}2: {id: 1002, name: 'ram', salary: 30000}3: {id: 1001, name: 'amit', salary: 20000}length: 4[[Prototype]]: Array(0)
arr;
(8) [50, 40, 30, 20, 20, 10, 10, 10]
arr.reduce((acc,e)=>acc+e,0);
190
arr.reduce((acc,e)=>acc+e);
190
arr.reduce((acc,e)=>{
    if(e==10){
        acc.push(e);
    }
    return acc;
},[]);
(3) [10, 10, 10]
arr.reduce((acc,e)=>{
    if(e==10){
        acc.push(e);
    }
    return acc;
},[]).length;
3
